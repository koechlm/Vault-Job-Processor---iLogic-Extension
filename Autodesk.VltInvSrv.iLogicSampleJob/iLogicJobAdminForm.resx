<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="UserRuleDispName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="CreateNewIteration.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="CreateNewIteration.ToolTipText" xml:space="preserve">
    <value>Most rules require check-out the file processed as they update processed file. Other rules, e.g., extracting BOM, exporting, don't require to check-in a new file iteration. Uncheck, to avoid check-out/check-in of the source file.</value>
  </data>
  <metadata name="RunInvApplication.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="UserRulePath.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="contextMenuStrip2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>433, 14</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>336, 14</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>336, 14</value>
  </metadata>
  <data name="lblDebugInfo.Text" xml:space="preserve">
    <value>Advanced Rule Debugging stops the Job execution with a Message Box.
Use Visual Studio and attach to the process 'VaultInventorServer.exe' (default)
or 'Inventor.exe' (if rule requires) before confirming the message with OK.</value>
  </data>
  <metadata name="column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>181, 14</value>
  </metadata>
  <data name="lblPropagateVltProps.Text" xml:space="preserve">
    <value>Default option to share all file properties as additional Rule Arguments:
NameValueMap = File.&lt;Vault Property Name&gt; | &lt;Vault Property Value&gt;.

Rule arguments include "ServerName". "VaultName", "UserId",
and "Ticket" also; use these to re-use the Job Processor's Vault connection.</value>
  </data>
  <metadata name="folderBrowserDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>12, 14</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAMQOAADEDgAAAAAAAAAA
        AADv+P//7/j//+/5///v+f//7/j//+/4///v+P//7/j//+/4///v+P//8Pj///D4///w+f//8Pn//+/4
        ///2+///2PD//9Hs/v/U7v7/1O3+/9fu/v/f9P//4vX//+L2///j9v//4fT//93x///e8f//3/L//+Hy
        ///h8v//7/j//9rw///Q7P7/1O3+/9bv/v/Z8f//vt7y/7fX6v++2+3/wt7w/9Dp+f/h9P//4PL//+Hz
        ///j8///4/P///D5///a8P//0ez+/9bu/v/X8f//sdz3/zB9sP8YYpP/HWST/yV2q/9Wq+H/1+/+/+X1
        ///h8///4/P//+Tz///w+f//2vD//9Hs/v/J6P7/wur//4C74f8YbKT/GWme/xponP8vj83/Mp7i/6vW
        8v/u+f//5PT//+X0///g8v//7/n//9zw///Q7P7/y+n+/9jy//9mpMz/F2yj/yd6sf8sg7z/P6Pl/y2V
        1/9ws97/5/f//9bv///L6v7/w+f+/+34///T7f7/yOj9/9Lu///L6v3/Poy9/x9zqf8wh8D/OZXR/z+n
        6P8wkc3/OpLI/7Ld+v/A5v//u+P+/8Dl/v/u+P//wub+/6nc/f+35P//ks3x/yZ+uf8ofbT/NJLP/3y8
        5f9RquL/LIzH/yOAuf+Jxez/yuv//8Dl/v/D5v7/7vj//8Pn/v+r3f3/u+X//3G55/8if7z/LIbA/0Wg
        2v+33vf/d7zo/ySFwP8jfbT/Ya3e/8jq///C5v7/xOf+/+74///F5/7/r979/7Xh/v9TquL/KYfE/y6N
        y/9kseT/yOn//6DU9v8qh8H/Jn2y/0eg2f+03/v/yOn//8Xn/v/u+P//xef+/7Th/v+i2Pr/QKPk/zGQ
        zv8xk9L/hcXs/8jr//+95f//RJjL/yV+tP9Dod7/lc70/87s///G6P7/7vj//8bn/v+64/7/icz5/zmk
        6v82mNj/OpnW/6LT8//E6f//y+z//2yw2/8og7z/T6zm/3fB8P/J6f7/yun+/+74///I6f7/t+L9/2vB
        +v88qvL/Np3h/0yh2v+54Pr/wuf//8vs//+Vyer/OZTO/1uz7f9ovPP/uOH8/8/s/v/u+P//zOr+/6vc
        +/9Ntvr/Pa74/zGg6P9nsuP/x+j+/8Hm/v/H6f//td33/1Ws4/9dtvL/Y734/5nU+//S7f7/7/n//8np
        /v+t3fz/k9P8/5TU/f+S0Pn/p9j4/8Lm/v/A5f7/wub+/8Pm/f+p2vn/pdn8/6fa/f+z3/3/zer+/+75
        ///U7v//yur+/9Tu///V7v//1+///9Tu///P6/7/0Ov//9Ls/v/T7f//2vD//9zw///c8P//2+///9bv
        ///u+f//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>